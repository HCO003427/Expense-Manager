{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/Transactions.model.ts","webpack:///./src/app/add-transaction/add-transaction.component.css","webpack:///./src/app/add-transaction/add-transaction.component.html","webpack:///./src/app/add-transaction/add-transaction.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/expenses/expenses.component.css","webpack:///./src/app/expenses/expenses.component.html","webpack:///./src/app/expenses/expenses.component.ts","webpack:///./src/app/guards/login.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/income/income.component.css","webpack:///./src/app/income/income.component.html","webpack:///./src/app/income/income.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/transaction-service.service.ts","webpack:///./src/app/transaction-details/transaction-details.component.css","webpack:///./src/app/transaction-details/transaction-details.component.html","webpack:///./src/app/transaction-details/transaction-details.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Transactions {\r\n    date: Date;\r\n    transaction_id: number;\r\n    type: string;\r\n    amount: number;\r\n    category: string;\r\n    sub_category?: string;\r\n    desc?: string;\r\n\r\n    constructor(txn?: any) {\r\n    this.date = txn && txn.date                     || null;\r\n    this.transaction_id = txn && txn.transaction_id || null;\r\n    this.type = txn && txn.type                     || 'Expense';\r\n    this.amount = txn && txn.amount                 || 0;\r\n    this.category = txn && txn.category             || null;\r\n    this.sub_category = txn && txn.sub_category     || null;\r\n    this.desc = txn && txn.desc                     || '';\r\n    }\r\n\r\n}\r\n","module.exports = \".btn-space {\\r\\n    margin-right: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"backToHome()\\\">back</button>\\n  <h2 class=\\\"text-center\\\">Manage Transactions</h2>\\n  <h3 class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"goPrev()\\\">\\n      <i class=\\\"material-icons\\\">\\n          keyboard_arrow_left\\n      </i>\\n      </button>\\n    {{date |date:\\\"dd-MM-yyyy\\\"}}\\n     <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"goNext()\\\">\\n    <i class=\\\"material-icons\\\">\\n        keyboard_arrow_right\\n    </i>\\n  </button> \\n  </h3>\\n  <div>\\n    <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"addIncome()\\\">\\n        Add Income\\n    </button>\\n    <button class=\\\"btn btn-danger btn-lg float-right\\\" (click)=\\\"addExpense()\\\">\\n        Add Expense\\n    </button>\\n  </div>\\n  <br>\\n  <div class=\\\"clearfix\\\"></div>\\n  <table class=\\\"table table-bordered\\\">\\n  \\n    <thead>\\n      <tr>\\n        <th>Type <span class=\\\"text-danger\\\">*</span></th>\\n        <th>Amount <span class=\\\"text-danger\\\">*</span></th>\\n        <th>Category <span class=\\\"text-danger\\\">*</span></th>\\n        <th>Sub_Category<span class=\\\"text-danger\\\">*</span></th>\\n        <th>Description</th>\\n        <th>Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let transaction of transactions\\\" \\n          class =\\\"app-transaction-details\\\"\\n          [transaction]=\\\"transaction\\\"\\n          (transactionDeleted)=\\\"refreshTransactions($event)\\\">\\n      </tr>\\n    </tbody>\\n \\n  </table> \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Transactions } from '../Models/Transactions.model';\nimport { TransactionServiceService } from '../services/transaction-service.service';\nimport { addDays } from 'date-fns';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\nexport class AddTransactionComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n    private transactionService: TransactionServiceService,\n    private router: Router) { }\n  date: Date;\n  shortDate: string;\n  prevDate = new Date();\n  newTransaction: Transactions;\n  transactions: Array<Transactions>;\n  ngOnInit() {\n    this.route.paramMap.subscribe(\n      paramMap => {\n        this.date = new Date(paramMap.get('date'));\n        console.log((addDays(this.date, 1)).toISOString().slice(0, 10));\n        this.shortDate = (addDays(this.date, 1)).toISOString().slice(0, 10);\n        console.log('Date set; calling Txn servcice for date', this.date);\n        this.transactionService.getTransactionsbyDate(this.shortDate).subscribe(\n          data => {\n            console.log('Data fetched for given date', this.shortDate, ' is ', data);\n            this.transactions = data;\n          });\n      }\n    );\n  }\n\n  refreshTransactions() {\n    this.ngOnInit();\n  }\n\n  addIncome() {\n    this.newTransaction = new Transactions({\n      'date': this.date,\n      'type': 'Income'\n    });\n    this.transactions.push(this.newTransaction);\n  }\n\n  addExpense() {\n    this.newTransaction = new Transactions({\n      'date': this.date,\n      'type': 'Expense'\n    });\n    this.transactions.push(this.newTransaction);\n  }\n\n  backToHome() {\n    this.router.navigate(['/home']);\n  }\n\n  goNext() {\n    console.log('Going to Next Date ', addDays(this.shortDate, 1));\n    this.router.navigate(\n      ['/addTransaction',\n      { 'date': addDays(this.date, 1), replaceUrl: true}]\n      );\n  }\n\n  goPrev() {\n    console.log('Going Back to prev Date ');\n    this.router.navigate(\n      ['/addTransaction',\n      { 'date': addDays(this.date, -1), replaceUrl: true}]\n      );\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { IncomeComponent } from './income/income.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginCheck } from './guards/login.guard';\r\nimport { AddTransactionComponent } from './add-transaction/add-transaction.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [LoginCheck]\r\n    },\r\n    {\r\n        path: 'expenses',\r\n        component: ExpensesComponent,\r\n        canActivate: [LoginCheck]\r\n    },\r\n    {\r\n        path: 'income',\r\n        component: IncomeComponent,\r\n        canActivate: [LoginCheck]\r\n    },\r\n    {\r\n        path: 'addTransaction',\r\n        component: AddTransactionComponent,\r\n        canActivate: [LoginCheck]\r\n    },\r\n    {\r\n        path: '**',\r\n        component: NotFoundComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1>\\r\\n    Expense Manager \\r\\n  </h1>\\r\\n  <p>Manage all your Accounts and Transactions here</p>\\r\\n  <a *ngIf = \\\"userLoogedIn\\\" class=\\\"btn btn-Secondary float-right\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, DoCheck } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements DoCheck {\r\n  title = 'Expense-Manager';\r\n  public userLoogedIn: string;\r\n\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.userLoogedIn = localStorage.getItem('user');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { IncomeComponent } from './income/income.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\nimport { AddTransactionComponent } from './add-transaction/add-transaction.component';\nimport { TransactionDetailsComponent } from './transaction-details/transaction-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ExpensesComponent,\r\n    IncomeComponent,\r\n    NotFoundComponent,\r\n    HomeComponent,\r\n    AddTransactionComponent,\r\n    TransactionDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    NgbModalModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  expenses works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expenses',\r\n  templateUrl: './expenses.component.html',\r\n  styleUrls: ['./expenses.component.css']\r\n})\r\nexport class ExpensesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LoginCheck implements CanActivate {\r\n    constructor(private router: Router, private loginService: LoginService) {\r\n\r\n    }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):  boolean {\r\n        console.log('Guard Invoked');\r\n        if (this.loginService.isLoggedIn()) {\r\n            console.log('user Logged In');\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['login']);\r\n            console.log('user not Logged In');\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"h3 {\\r\\n    margin: 0 0 10px;\\r\\n  }\\r\\n  \\r\\n  pre {\\r\\n    background-color: #f5f5f5;\\r\\n    padding: 15px;\\r\\n  }\"","module.exports = \"<div class=\\\"containmer\\\">\\r\\n<!-- <ng-template #modalContent let-close=\\\"close\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div>\\r\\n        Action:\\r\\n        <pre>{{ modalData?.action }}</pre>\\r\\n      </div>\\r\\n      <div>\\r\\n        Event:\\r\\n        <pre>{{ modalData?.event | json }}</pre>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\r\\n    </div>\\r\\n  </ng-template> -->\\r\\n  \\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"btn-group\\\">\\r\\n        <div\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          mwlCalendarPreviousView\\r\\n          [view]=\\\"view\\\"\\r\\n          [(viewDate)]=\\\"viewDate\\\"\\r\\n          (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n          Previous\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"btn btn-outline-secondary\\\"\\r\\n          mwlCalendarToday\\r\\n          [(viewDate)]=\\\"viewDate\\\">\\r\\n          Today\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          mwlCalendarNextView\\r\\n          [view]=\\\"view\\\"\\r\\n          [(viewDate)]=\\\"viewDate\\\"\\r\\n          (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n          Next\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <!-- <div class=\\\"col-md-4\\\">\\r\\n      <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"btn-group\\\">\\r\\n        <div\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"view = CalendarView.Month\\\"\\r\\n          [class.active]=\\\"view === CalendarView.Month\\\">\\r\\n          Month\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"view = CalendarView.Week\\\"\\r\\n          [class.active]=\\\"view === CalendarView.Week\\\">\\r\\n          Week\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"view = CalendarView.Day\\\"\\r\\n          [class.active]=\\\"view === CalendarView.Day\\\">\\r\\n          Day\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> -->\\r\\n  </div>\\r\\n  <br>\\r\\n  <div [ngSwitch]=\\\"view\\\">\\r\\n    <mwl-calendar-month-view\\r\\n      *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n      [viewDate]=\\\"viewDate\\\"\\r\\n      [events]=\\\"events\\\"\\r\\n      [refresh]=\\\"refresh\\\"\\r\\n      [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n      (dayClicked)=\\\"goToTransactions($event.day)\\\"\\r\\n      (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n      (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n    </mwl-calendar-month-view>\\r\\n    <!-- <mwl-calendar-week-view\\r\\n      *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n      [viewDate]=\\\"viewDate\\\"\\r\\n      [events]=\\\"events\\\"\\r\\n      [refresh]=\\\"refresh\\\"\\r\\n      (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n      (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n    </mwl-calendar-week-view>\\r\\n    <mwl-calendar-day-view\\r\\n      *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n      [viewDate]=\\\"viewDate\\\"\\r\\n      [events]=\\\"events\\\"\\r\\n      [refresh]=\\\"refresh\\\"\\r\\n      (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n      (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n    </mwl-calendar-day-view>\\r\\n  </div> -->\\r\\n  \\r\\n  <!-- <br><br><br>\\r\\n  \\r\\n  <h3>\\r\\n    Edit events\\r\\n    <button\\r\\n      class=\\\"btn btn-secondary pull-right\\\"\\r\\n      (click)=\\\"addEvent()\\\">\\r\\n      Add new\\r\\n    </button>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </h3>\\r\\n  \\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n  \\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Title</th>\\r\\n        <th>Primary color</th>\\r\\n        <th>Secondary color</th>\\r\\n        <th>Starts at</th>\\r\\n        <th>Ends at</th>\\r\\n        <th>Remove</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  \\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let event of events; let index = index\\\">\\r\\n        <td>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            [(ngModel)]=\\\"event.title\\\"\\r\\n            (keyup)=\\\"refresh.next()\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <input\\r\\n            type=\\\"color\\\"\\r\\n            [(ngModel)]=\\\"event.color.primary\\\"\\r\\n            (change)=\\\"refresh.next()\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <input\\r\\n            type=\\\"color\\\"\\r\\n            [(ngModel)]=\\\"event.color.secondary\\\"\\r\\n            (change)=\\\"refresh.next()\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            type=\\\"text\\\"\\r\\n            mwlFlatpickr\\r\\n            [(ngModel)]=\\\"event.start\\\"\\r\\n            (ngModelChange)=\\\"refresh.next()\\\"\\r\\n            [altInput]=\\\"true\\\"\\r\\n            [convertModelValue]=\\\"true\\\"\\r\\n            [enableTime]=\\\"false\\\"\\r\\n            dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n            altFormat=\\\"F j, Y H:i\\\"\\r\\n            placeholder=\\\"Not set\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            type=\\\"text\\\"\\r\\n            mwlFlatpickr\\r\\n            [(ngModel)]=\\\"event.end\\\"\\r\\n            (ngModelChange)=\\\"refresh.next()\\\"\\r\\n            [altInput]=\\\"true\\\"\\r\\n            [convertModelValue]=\\\"true\\\"\\r\\n            [enableTime]=\\\"true\\\"\\r\\n            dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n            altFormat=\\\"F j, Y H:i\\\"\\r\\n            placeholder=\\\"Not set\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <button\\r\\n            class=\\\"btn btn-danger\\\"\\r\\n            (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\r\\n            Delete\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  \\r\\n  </table> \\r\\n</div> -->\"","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView\r\n} from 'angular-calendar';\r\nimport { Router } from '@angular/router';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent  {\r\n  // tslint:disable-next-line:label-position\r\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  // actions: CalendarEventAction[] = [\r\n  //   {\r\n  //     label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n  //     onClick: ({ event }: { event: CalendarEvent }): void => {\r\n  //       this.handleEvent('Edited', event);\r\n  //     }\r\n  //   },\r\n  //   {\r\n  //     label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n  //     onClick: ({ event }: { event: CalendarEvent }): void => {\r\n  //       this.events = this.events.filter(iEvent => iEvent !== event);\r\n  //       this.handleEvent('Deleted', event);\r\n  //     }\r\n  //   }\r\n  // ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  // events: CalendarEvent[] = [\r\n  //   {\r\n  //     start: subDays(startOfDay(new Date()), 1),\r\n  //     end: addDays(new Date(), 1),\r\n  //     title: 'A 3 day event',\r\n  //     color: colors.red,\r\n  //     actions: this.actions,\r\n  //     allDay: true,\r\n  //     resizable: {\r\n  //       beforeStart: true,\r\n  //       afterEnd: true\r\n  //     },\r\n  //     draggable: true\r\n  //   },\r\n  //   {\r\n  //     start: startOfDay(new Date()),\r\n  //     title: 'An event with no end date',\r\n  //     color: colors.yellow,\r\n  //     actions: this.actions\r\n  //   },\r\n  //   {\r\n  //     start: subDays(endOfMonth(new Date()), 3),\r\n  //     end: addDays(endOfMonth(new Date()), 3),\r\n  //     title: 'A long event that spans 2 months',\r\n  //     color: colors.blue,\r\n  //     allDay: true\r\n  //   },\r\n  //   {\r\n  //     start: addHours(startOfDay(new Date()), 2),\r\n  //     end: new Date(),\r\n  //     title: 'A draggable and resizable event',\r\n  //     color: colors.yellow,\r\n  //     actions: this.actions,\r\n  //     resizable: {\r\n  //       beforeStart: true,\r\n  //       afterEnd: true\r\n  //     },\r\n  //     draggable: true\r\n  //   }\r\n  // ];\r\n\r\n  activeDayIsOpen = false;\r\n\r\n  constructor(private modal: NgbModal, private router: Router) {}\r\n\r\n  goToTransactions(day) {\r\n    // console.log(day);\r\n    this.router.navigate(['/addTransaction', {date: day.date}]);\r\n\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      this.viewDate = date;\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    event.start = newStart;\r\n    event.end = newEnd;\r\n    this.handleEvent('Dropped or resized', event);\r\n    this.refresh.next();\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    this.modal.open(this.modalContent, { size: 'lg' });\r\n  }\r\n\r\n  // addEvent(): void {\r\n  //   this.events.push({\r\n  //     title: 'New event',\r\n  //     start: startOfDay(new Date()),\r\n  //     end: endOfDay(new Date()),\r\n  //     color: colors.red,\r\n  //     draggable: true,\r\n  //     resizable: {\r\n  //       beforeStart: true,\r\n  //       afterEnd: true\r\n  //     }\r\n  //   });\r\n  //   this.refresh.next();\r\n  // }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  income works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-income',\r\n  templateUrl: './income.component.html',\r\n  styleUrls: ['./income.component.css']\r\n})\r\nexport class IncomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- {{login.value | json}}\\r\\n  {{loginForm | json}} -->\\r\\n  <form #userLogin =\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" novalidate>\\r\\n      <div *ngIf = \\\"errorMsg\\\">\\r\\n          <span class=\\\"text-danger\\\">{{errorMsg}}</span>\\r\\n        </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"userName\\\">UserName</label>\\r\\n      <input name = \\\"userName\\\" id=\\\"userName\\\" type=\\\"text\\\" [(ngModel)]=\\\"loginForm.user_name\\\"\\r\\n      class =\\\"form-control col-xs-4\\\" #userName=\\\"ngModel\\\"\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input name = \\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"loginForm.password\\\"\\r\\n        class =\\\"form-control col-xs-4\\\" #password=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n    \\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginForm } from '../Models/user-login.model';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\nimport { ReturnStatement } from '@angular/compiler';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: LoginForm = {\r\n    user_name: '',\r\n    password: ''\r\n  };\r\n  errorMsg: string;\r\n  isLoggedIn: boolean;\r\n  constructor(private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    console.log('User Name :' + this.loginForm.user_name + 'Password : ' + this.loginForm.password);\r\n    this.loginService.login(this.loginForm).subscribe(\r\n      user => {\r\n        if (!!user && user.user_id !== 0 && user.user_name === this.loginForm.user_name) {\r\n          localStorage.setItem('user', 'admin');\r\n          console.log(localStorage.getItem('user'));\r\n          this.router.navigate(['/home']);\r\n          } else {\r\n          console.log('User not found - login service');\r\n          this.errorMsg = 'Incorrect Credentials';\r\n\r\n          }\r\n      },\r\n      error => {\r\n        console.log('user doesnt exists');\r\n      }\r\n    );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { LoginForm } from '../Models/user-login.model';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private URL = 'http://192.168.1.7:8081/api/users';\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  login(loginForm: LoginForm): Observable<LoginForm> {\r\n    const headers = new HttpHeaders();\r\n      headers.append('Authorization', 'Basic ' + btoa('user:05b69817-a057-4926-a1f2-e94ee8938eee'));\r\n      headers.append('Access-Control-Allow-Origin', 'http://localhost:8000');\r\nheaders.append('Access-Control-Allow-Credentials', 'true');\r\n    console.log(this.URL);\r\n    return this.http.post<LoginForm>(this.URL, loginForm, {headers: headers});\r\n  }\r\n  getUser() {\r\n    return localStorage.getItem('user');\r\n  }\r\n\r\n  isLoggedIn() {\r\n\r\n    if (!!this.getUser()) {\r\n      console.log('inside login service');\r\n      console.log(this.getUser());\r\n      return true;\r\n    } else {\r\n      console.log('inside else part login service');\r\n      return false;\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Transactions } from '../Models/Transactions.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionServiceService {\n\n  private URL = 'http://192.168.1.7:8081/api/transactions';\n  constructor(private http: HttpClient) { }\n\n  getTransactionsbyDate(date: string): Observable<Transactions[]> {\n    return this.http.get<Transactions[]>(`${this.URL}/${date}`);\n\n  }\n\n  updateTransaction(transaction: Transactions): Observable<Transactions> {\n    return this.http.post<Transactions>(this.URL, transaction);\n  }\n\n  deleteTransaction(transaction: Transactions): Observable<any> {\n    const headers = new HttpHeaders();\n      headers.append('Access-Control-Allow-Origin', '*');\n      return this.http.delete<any>(`${this.URL}/${transaction.transaction_id}`, {headers: headers});\n  }\n}\n","module.exports = \"\"","module.exports = \"<td>\\n  <select [disabled]=\\\"!editEnabled\\\" #type=\\\"ngModel\\\" class=\\\"custom-select\\\" [class.is-invalid]=\\\"false\\\" name=\\\"type\\\" required\\n    [(ngModel)]=\\\"transaction.type\\\">\\n    <option value=\\\"Expense\\\">Expense</option>\\n    <option value=\\\"Income\\\">Income</option>\\n  </select>\\n</td>\\n<td>\\n  <input [disabled]=\\\"!editEnabled\\\" type=\\\"text\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"transaction.amount\\\"\\n    (blur)=\\\"validateAmount(amount.value)\\\">\\n    <span class=\\\"text-danger\\\" *ngIf=\\\"amount.touched && amountHasErrors\\\">Please enter an amount</span>\\n</td>\\n<td>\\n  <input [disabled]=\\\"!editEnabled\\\" type=\\\"text\\\" name=\\\"category\\\" #category=\\\"ngModel\\\" [(ngModel)]=\\\"transaction.category\\\" required\\n    (change)=\\\"refresh.next()\\\">\\n    <span class=\\\"text-danger\\\" *ngIf=\\\"category.errors?.required && category.touched\\\">Please select category</span>\\n</td>\\n<td>\\n  <input [disabled]=\\\"!editEnabled\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"sub_category\\\" #sub_category=\\\"ngModel\\\" required\\n    [(ngModel)]=\\\"transaction.sub_category\\\">\\n    <span class=\\\"text-danger\\\" *ngIf=\\\"sub_category.errors?.required && sub_category.touched\\\">Please select sub_category</span>\\n</td>\\n<td>\\n  <input [disabled]=\\\"!editEnabled\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"desc\\\" #desc=\\\"ngModel\\\" [(ngModel)]=\\\"transaction.desc\\\">\\n</td>\\n<td>\\n  <div class=\\\"btn btn-group\\\">\\n    <button *ngIf=\\\"!editEnabled\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editTransaction()\\\">\\n      <i class=\\\"material-icons\\\">\\n        create\\n      </i>\\n    </button>\\n    <button *ngIf=\\\"editEnabled\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateTransaction()\\\">\\n      <i class=\\\"material-icons\\\">\\n        done\\n      </i>\\n    </button>\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteTransaction()\\\">\\n      <i class=\\\"material-icons\\\">\\n        remove_circle\\n      </i>\\n    </button>\\n  </div>\\n</td>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Transactions } from '../Models/Transactions.model';\nimport { TransactionServiceService } from '../services/transaction-service.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '.app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.css']\n})\nexport class TransactionDetailsComponent implements OnInit {\n  @Input() transaction: Transactions;\n  @Output() transactionDeleted = new EventEmitter();\n  editEnabled = false;\n  amountHasErrors: boolean;\n  constructor(private transactionService: TransactionServiceService) {\n  }\n\n  refresh: Subject<any> = new Subject();\n  ngOnInit() {\n    if (this.transaction.category === null || this.transaction.category === '') {\n      this.editEnabled = true;\n   }\n  }\n\n  editTransaction() {\n    this.editEnabled =  true;\n  }\n\n  updateTransaction() {\n    this.editEnabled = false;\n    this.transactionService.updateTransaction(this.transaction)\n    .subscribe(\n      data => this.transaction = data,\n    );\n  }\n  deleteTransaction() {\n    this.transactionService.deleteTransaction(this.transaction)\n    .subscribe(\n      data => {\n        this.transactionDeleted.emit();\n      // this.refresh.next();\n      },\n      error => this.transactionDeleted.emit()\n      );\n  }\n\n  validateAmount(value: any) {\n    console.log('Validating Amount');\n    if (value === 0 || value === null || value === '') {\n      this.amountHasErrors = true;\n      console.log('Amount has errors =', this.amountHasErrors);\n    } else {\n      this.amountHasErrors = false;\n      console.log('Amount has errors =', this.amountHasErrors);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}